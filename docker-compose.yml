version: "3.8"

services:
  # MinIO server for MLflow artifacts
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001" --address ":9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      # Use 127.0.0.1 to match redirect URLs
      MINIO_BROWSER_REDIRECT_URL: http://127.0.0.1:8080/minio
      # API endpoint via Nginx proxy
      #MINIO_SERVER_URL: http://minio:9000/
    ports:
      - "9000:9000"   # API (keep for potential direct access or debugging)
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    networks:
      - mlflow-network
      

  # MLflow server
  mlflow:
    build: .
    container_name: mlflow_server
    ports:
      - "5000:5000"
    environment:
      MLFLOW_ARTIFACT_ROOT: s3://mlflow-artifacts
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_REGION: us-east-1
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    command: >
      mlflow server
        --backend-store-uri mysql+pymysql://subin:subin_123@10.0.16.171:3306/mlflow_db
        --default-artifact-root s3://mlflow-artifacts
        --host 0.0.0.0
        --port 5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 10s
      timeout: 5s
      retries: 12
    networks:
      - mlflow-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_logs:/var/log/nginx
      - ./nginx_includes:/etc/nginx/includes
    depends_on:
      - mlflow
      - minio
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - mlflow-network

networks:
  mlflow-network:
    driver: bridge

volumes:
  minio_data: