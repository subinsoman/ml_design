
events {
    worker_connections 1024;
}

http {
    log_format custom_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '"$upstream_addr" "$upstream_status" '
                          '"$request_uri" -> "$uri"';
    upstream mlflow {
        server mlflow:5000;
    }
    
    upstream minio_s3 {
        least_conn;
        server minio:9001;
    }
    
   

    server {
        listen 8080;
        listen [::]:8080;
        server_name localhost;

        # Enable logging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Proxy for MLflow
        location /mlflow/ {
            proxy_pass http://mlflow/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Proxy for MinIO S3 API
        location /minio/ {
            # Strip /minio/ from the request pat

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300s;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            client_max_body_size 0;
            proxy_buffering off;
            proxy_request_buffering off;
            chunked_transfer_encoding off;

            proxy_pass http://minio_s3/;
    }


       

        # Health check endpoint
        location /health {
            return 200 "nginx is running\n";
            add_header Content-Type text/plain;
        }

        # Default location for other requests
        location / {
            return 404 "Not Found\n";
            add_header Content-Type text/plain;
        }
    }
}
